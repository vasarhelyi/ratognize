###################################################################
# Ratognize ini file - Change values as you wish but keep format! #
# see src/ini.cpp for parsing details if you miss something...    #
###################################################################

####################################################################
# Input video file to analyze.
# To overwrite this setting from the command line, add this to the arguments: ... -inputvideofile [filename]
inputvideofile="\your\video\file.mp4"

####################################################################
# Input paint-date file and/or dayssincelastpaint variables
# if the experiment is long and there are several blob color painting dates and
# they are fading in time, these variables setup the dynamic color interpolation
#
# dayssincelastpaint value is read from:
#   1. from the command line, if this is added to the arguments: ... -dayssincelastpaint [filename]
#   2. if no command line is given, automatically from the beginning of the filename, compared with the paintdatefile values
#   3. if no paintdatefile is given or in case of filename or other error: from the line below
# colorselectionmethod can be: interpolate(0), fit_linear(1) or interpolate_date(2)

#paintdatefile="paintdates.dat"
dayssincelastpaint=0
colorselectionmethod=1

####################################################################
# Input video Interlacing: we need to know whether input video is
# interlaced or not because cvGetCaptureProperty returns doubled
# framerate on interlaced videos.
# TODO: find automatic method to detect if input video is interlaced or not.

bInputVideoIsInterlaced=1

####################################################################
# output directory (absolute, or relative to current directory)
outputdirectory="OUT"

####################################################################
# set region of interest (x y width height) or comment out for full frame
# set ROI width and height value to multiples of 8 to avoid opencv segfaults

#imageROI=125 0 1600 1080

####################################################################
# define how roi should be treated in the video output:
# 0: save full frame, 1: save only ROI

bApplyROIToVideoOutput=0

####################################################################
# temporal roi: set frame range or comment out if not used

#firstframe=5800
#lastframe=1000

####################################################################
# boolean variables: set to 1 for debugging, 0 for high speed, no output

bProcessText=0		# Instead of image processing, load previously saved blob data (created by ratognize or trajognize)
bProcessImage=1     # Run any image processing, or just save videos etc.?
bShowVideo=1        # Show the output of the image processing?
bShowDebugVideo=0   # Show the debug video outputs for all color channels?
bWriteVideo=2       # Create video output? (0-no, 1-yes, 2-onlyjpg)
bWriteText=1        # Create text output?
bCout=0             # Show detailed console output?
bCin=0              # Stop until key pressed after each frame?

####################################################################
# input video Gauss smoothing
# param is 0 for no smoothing, otherwise defines smoothing kernel size

gausssmoothing=3

####################################################################
# display video parameters (set to 0 or comment out if not needed)

displaywidth=672

####################################################################
# output video frame skipping
# skipfactor=N means that every Nth (deinterlaced!!!) frame is saved. N<=0 eq N=1

outputvideoskipfactor=1                 # determines the speed of the output video.

####################################################################
# hipervideo parameters

outputscreenshotskipfactor=10000        # type 1 hipervideo frame skipping for summary videos from very long measurements
hipervideostart=2011-06-07_00-00-00     # beginning of the hipervideo range
hipervideoend=2012-02-26_00-00-00       # end of the hipervideo range
hipervideoduration=0000-00-00_00-20-00  # length of the hypervideo. Keep date part empty, since video will be <= 1 day long anyways

####################################################################
# output video blob marker mode (flags)
#    0: nothing goes on video, only time and Copyright notice
# |  1: coloured blobs as grey circles with white first letter of name
# |  2: motion blobs as dark grey ellipses
# |  4: rat blobs as gray ellipses
# |  8: cage center and wall detection output is printed
# | 16: barcodes are drawn from trajognize output in bProcessText mode
# | 32: color legend for barcode mfix values
# | 64: debug ID output used for pair measurements
# | 128: velocity values (pixel/frame) for chosen barcodes

outputvideotype=0

####################################################################
# motion detection filter parameters
# mdAlpha is the fading time parameter for the cvRunningAverage function: dst = mdAlpha*scr + (1-mdAlpha)*dst
# mdThreshold is the grey->b&w threshold of the difference between the current frame and the running average
# mdAreaMin and mdAreaMax are the filter parameters for the found motion blobs
# HINT: further parameters, like dilate and erode can be set in the souce code, in FilterMotion(.). Now they are 10 and 8.

bMotionDetection=1
mdAlpha=0.5
mdThreshold=50
mdAreaMin=1000
mdAreaMax=50000

####################################################################
# variables used for blob detection

mRats=28 # number of rats (objects) to track
mChips=3 # number of coloured blobs on each rat (object)
mBase=5 # number of colours used
mDiaMin=8 # minimum diameter of a coloured blob (single value or list of values for all blob types separately)
mDiaMax=40 # maximum diameter of a coloured blob (single value or list of values for all blob types separately)
mElongationMax=4 # maximum elongation of blob ellipse (single value or list of values for all blob types separately)
bBlobE=0 # should we treat blobs as ellipses (1) or circles (0)?

####################################################################
# dilate/erode variables used for blob/rat detection

mErodeRat=4 # number of iterations on rat blob pre-filtering (erode)
mDilateRat=6 # number of iterations on rat blob pre-filtering (dilate)
mErodeBlob=2 # number of iterations on HSV blob pre-filtering (erode)
mDilateBlob=2 # number of iterations on HSV blob pre-filtering (dilate)

####################################################################
# daylight/nightlight LED indicator parameters
# skipfactor defines rate of LED checking
# position is in pixels on original image, not ROI
# color and range definitions are same format as blob colors below
# LED ON = DayLight, OFF = NightLight, if not used, default is nightlight

bLED=0
LEDdetectionskipfactor=25
mLEDPos=300 550
mLEDColor=0 255 255
mLEDRange=10 80 80

####################################################################
# color names and usage - should preceed all color definitions
# use format: name 1 if ON, or name 0 if OFF

mUse0=RED 1
mUse1=ORANGE 1
mUse2=GREEN 1
mUse3=BLUE 1
mUse4=PURPLE 1

####################################################################
# colors are in HH SS VV format, with ranges:
#
#   Hue:         0-180 (0x00-0xb4) - circular
#   Saturation:  0-255 (0x00-0xff)
#   Value:       0-255 (0x00-0xff)
#
# Notes: (1) OpenCV handles H ranges of 0-180 and (2) converts RGB differently than other programs.
# For more info about these issues see: http://www.shervinemami.co.cc/colorConversion.html

# select DAYLIGHT or NIGHTLIGHT and set date and value (0 index base) to the number of days since the last paint
# colors on unspecified days are linearly interpolated from closest neighbors

####################################################################
# SAMPLE COLOR DEFINITION

NIGHTLIGHT=2011-10-11_05-11-00 0
# 0 - red
mColorHSV0=4 128 132
mRangeHSV0=5 40 40
# 1 - orange
mColorHSV1=20 146 143
mRangeHSV1=6 30 30
# 2 - green
mColorHSV2=70 71 113
mRangeHSV2=10 25 30
# 3 - blue
mColorHSV3=114 91 117
mRangeHSV3=5 28 28
# 4 - purple/pink
mColorHSV4=150 100 120
mRangeHSV4=16 60 40
# background color definition
mBGColorHSV=0 0 0
mBGRangeHSV=0 0 0

# dummy color definition for daylight settings
# (note that you will most probably need to keep this
# as is as it is generally not needed in standard projects)
DAYLIGHT=2011-10-11_05-11-00 0
# 0 - red
mColorHSV0=0 0 0
mRangeHSV0=0 0 0
# 1 - orange
mColorHSV1=0 0 0
mRangeHSV1=0 0 0
# 2 - green
mColorHSV2=0 0 0
mRangeHSV2=0 0 0
# 3 - blue
mColorHSV3=0 0 0
mRangeHSV3=0 0 0
# 4 - purple/pink
mColorHSV4=0 0 0
mRangeHSV4=0 0 0
# background color definition
mBGColorHSV=0 0 0
mBGRangeHSV=0 0 0